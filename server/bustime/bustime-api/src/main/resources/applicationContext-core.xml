<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd 
           ">

	<context:annotation-config />


	<aop:aspectj-autoproxy />
	<!-- 扫描指定package下所有带有如@controller,@services,@resource,并把所注释的注册为Spring Beans -->
	<context:component-scan base-package="com.bustime" />


	<tx:annotation-driven />
	<tx:annotation-driven transaction-manager="transactionManager" />


	<import resource="classpath:data-source.xml" />

	<!-- 修改配置文件需要重新启动 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<!-- 如果有相同的Key,放在后面文件中的覆盖前面的 -->
				<!-- <value>classpath://bustime.properties</value> -->
				<value>file://${project.home}/conf/bustime_${project.env:local}.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- 修改配置文件直接起效果,不需要重新启动 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="300" />
		<property name="basenames">
			<list>
				<!-- <value>classpath://bustime.properties</value> -->
				<value>file://${project.home}/conf/bustime_${project.env:local}
				</value>
			</list>
		</property>
	</bean>

	<!-- Configure the multipart resolver <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
		/> -->
	<!-- <bean id="jobConfigService" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="refreshDataService" /> <property name="targetMethod" 
		value="refresh" /> </bean> <bean id="triggerConfigService" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
		<property name="jobDetail" ref="jobConfigService" /> <property name="cronExpression" 
		value="0 0/5 * * * ?" /> </bean> <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
		<property name="triggers"> <list> <ref bean="triggerConfigService" /> </list> 
		</property> </bean> -->
</beans>  